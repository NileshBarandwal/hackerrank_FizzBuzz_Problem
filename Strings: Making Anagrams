*JAVA 7*

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the makeAnagram function below.
    static int makeAnagram(String a, String b) {

        if (a.length() == 0 || b.length() == 0) {
        return a.length() == 0 ? b.length() : a.length();
    }

    char[] firstChars = a.toCharArray();
    char[] secondChars = b.toCharArray();
    int[] firstHelper = new int[26];
    int[] secondHelper = new int[26];
    int aVal = (int) 'a', sum = 0;
    for (int i = 0; i < firstChars.length; i++) {
        firstHelper[(int) firstChars[i] - aVal] += 1;
    }
    for (int i = 0; i < secondChars.length; i++) {
        secondHelper[(int) secondChars[i] - aVal] += 1;
    }
    for (int i = 0; i < 26; i++) {
        if (firstHelper[i] != secondHelper[i]) {
            sum += Math.abs(firstHelper[i] - secondHelper[i]);
        }
    }
    return sum;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String a = scanner.nextLine();

        String b = scanner.nextLine();

        int res = makeAnagram(a, b);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}

*JAVA 8*

// Complete the makeAnagram function below.
    static int makeAnagram(String a, String b) {

        if (a.length() == 0 || b.length() == 0) {
        return a.length() == 0 ? b.length() : a.length();
    }
    int result = 0;
    int[] letters = new int[26];
    for (char c : a.toCharArray()) {
        letters[c - 'a']++;
    }
    for (char c : b.toCharArray()) {
        letters[c - 'a']--;
    }
    for (int i : letters) {
        result += Math.abs(i);
    }
    return result;

